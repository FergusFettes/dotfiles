# cat << EOF > /dev/null
# Basic setup {{{
# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1

# vi is good
setw -g mode-keys vi

# }}}
# Design {{{
# panes
set -g pane-border-style fg=black
set -g pane-active-border-style fg=brightred

#window mode
set -g status-position bottom
set -g status-left '#[fg=colour0,bg=cyan,bold] #S '
set -g status-right ''
set -g status-left-length 50
set -g status-justify left
set -g status-style bg=black,fg=colour137,dim
set -g status-interval 10

set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "screen-256color"

# The modes
setw -g clock-mode-colour colour135
setw -g mode-style fg=colour196,bg=colour238,bold

setw -g window-status-current-style fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
setw -g window-status-style bg=colour235,fg=colour138,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

set -g mouse on

# Auto renumber windows
set-option -g renumber-windows on
# }}}
# Plugins {{{
# TODO: investigate these fellas
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-pain-control'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @prefix_highlight_output_prefix ''
# set -g @prefix_highlight_output_suffix ''

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-battery'

set -g @plugin 'tmux-plugins/tmux-copycat'
# prefix + ctrl-f - simple file search
# prefix + ctrl-g - jumping over git status files (best used after git status command)
# prefix + alt-h - jumping over SHA-1/SHA-256 hashes (best used after git log command)
# prefix + ctrl-u - url search (http, ftp and git urls)
# prefix + ctrl-d - number search (mnemonic d, as digit)
# prefix + alt-i - ip address search

# note, with prefix + y this copies the command line contents!
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'jbnicolai/tmux-fpp'
set -g @continuum-restore 'on'
set -g @resurrect-hook-post-restore-all 'tmux kill-session -t 0'
set -g @plugin 'tmux-plugins/tmux-sessionist'
# }}}
# Custom Keybidings {{{

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# bind-key -n C-h  if-shell  "$is_vim"  "send-keys C-h"  "select-pane -L"
# bind-key -n C-j   if-shell  "$is_vim"  "send-keys C-j"   "select-pane -D"
# bind-key -n C-k  if-shell  "$is_vim"  "send-keys C-k"  "select-pane -U"
# bind-key -n C-l   if-shell  "$is_vim"  "send-keys C-l"   "select-pane -R"
# bind-key -n C-\   if-shell  "$is_vim"  "send-keys C-\\"  "select-pane -l"

# change background color
bind -n M-8 setw -g window-status-current-style fg=black,bg=white
bind -n M-9 setw -g window-status-current-style fg=white,bg=black

# maximize current pane
bind -n M-x run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'
bind -n M-b capture-pane -J \; save-buffer /tmp/.last_tmux_output \; run -b "cat /tmp/.last_tmux_output | awk NF | tail -n2 | head -n1 | xargs echo -n | xclip -selection c"

bind : command-prompt
bind r refresh-client
bind L clear-history

# ALT EVERYWHERE
bind -n M-w choose-window
bind -n M-v split-window -h
bind -n M-s split-window -v
bind -n M-t set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"
bind -n M-q attach -c "#{pane_current_path}"\; display-message "root dir is now #{pane_current_path}"
bind -n M-d send-keys "C-d"
bind -n M-D detach-client

bind v split-window -h
bind s split-window -v

# switch panes using Alt-arrow without prefix
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

bind -n M-L switch-client -p
bind -n M-H switch-client -n
bind -n M-K next-window
bind -n M-J previous-window

bind a last-pane
bind q display-panes
bind -n M-c new-window
bind enter next-layout
bind -n M-y resize-pane -L 5
bind -n M-u resize-pane -D 5
bind -n M-i resize-pane -U 5
bind -n M-o resize-pane -R 5

bind -n M-[ copy-mode
bind ] paste-buffer

bind -n M-p rotate-window
bind -n M-z resize-pane -Z

bind -n M-e kill-pane

# Easy config reload
bind -n M-R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."
# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'
# }}}
# Functions {{{
# EOF
#
# # exit the script if any statement returns a non-true return value
# set -e
#
# unset GREP_OPTIONS
# export LC_NUMERIC=C
#
# if ! printf '' | sed -E 's///' 2>/dev/null; then
#   if printf '' | sed -r 's///' 2>/dev/null; then
#     sed () {
#       n=$#; while [ "$n" -gt 0 ]; do arg=$1; shift; case $arg in -E*) arg=-r${arg#-E};; esac; set -- "$@" "$arg"; n=$(( n - 1 )); done
#       command sed "$@"
#     }
#   fi
# fi
#
# __newline='
# '
#
# _maximize_pane() {
#   current_session=${1:-$(tmux display -p '#{session_name}')}
#   current_pane=${2:-$(tmux display -p '#{pane_id}')}
#
#   dead_panes=$(tmux list-panes -s -t "$current_session" -F '#{pane_dead} #{pane_id} #{pane_start_command}' | grep -E -o '^1 %.+maximized.+$' || true)
#   restore=$(echo "$dead_panes" | sed -n -E -e "s/^1 $current_pane .+maximized.+'(%[0-9]+)'$/tmux swap-pane -s \1 -t $current_pane \; kill-pane -t $current_pane/p" -e "s/^1 (%[0-9]+) .+maximized.+'$current_pane'$/tmux swap-pane -s \1 -t $current_pane \; kill-pane -t \1/p" )
#
#   if [ -z "$restore" ]; then
#     [ "$(tmux list-panes -t "$current_session:" | wc -l | sed 's/^ *//g')" -eq 1 ] && tmux display "Can't maximize with only one pane" && return
#     window=$(tmux new-window -t "$current_session:" -P "exec maximized... 2> /dev/null & tmux setw -t \"$current_session:\" remain-on-exit on; printf \"Pane has been maximized, press <alt>x to restore. %s\" '$current_pane'")
#     window=${window%.*}
#
#     retry=1000
#     while [ x"$(tmux list-panes -t "$window" -F '#{session_name}:#{window_index} #{pane_dead}' 2>/dev/null)" != x"$window 1" ] && [ "$retry" -ne 0 ]; do
#       sleep 0.1
#       retry=$((retry - 1))
#     done
#     if [ "$retry" -eq 0 ]; then
#       tmux display 'Unable to maximize pane'
#     fi
#
#     new_pane=$(tmux display -t "$window" -p '#{pane_id}')
#     tmux setw -t "$window" remain-on-exit off \; swap-pane -s "$current_pane" -t "$new_pane"
#   else
#     $restore || tmux kill-pane
#   fi
# }
#
# "$@"
#### }}}
#### vim:foldmethod=marker:foldlevel=0
